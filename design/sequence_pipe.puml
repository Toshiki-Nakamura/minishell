

@startuml
title 3.Exec_Pipe_Command_Sequence_Diagram
hide footbox

participant "cmd親プロセス" as Parent1
participant "cmd子プロセス1" as Child1
participant "cmd子プロセス2" as Child2
participant "cmd2親プロセス" as Parent2

alt ex) % ls
	[->Parent1 : exec_pipe_command(0)
	activate Parent1
	Parent1 -> Parent1 : exec_command(0)
	activate Parent1
	Parent1->] : "ls"
	deactivate Parent1
	[<--Parent1 : return
	deactivate Parent1
else ex) % ls | grep test
	[->Parent1 : exec_pipe_command(1)
	activate Parent1
	Parent1->Parent1 : pipe()
	create Child1
	Parent1->Child1 : fork()
	create Child2
	Parent1->Child2 : fork()
	Parent1->Parent1 : close_fd
	note right: 親プロセスではパイプfdを使わないので\nfd[0],fd[1]共に閉じる
	Parent1->Child1 : waitpid(1)
	activate Child1
	deactivate Parent1
	Child1->Child1 : input fd setting
	note left: 標準入力をcmd0から受け取る設定
	Child1->Parent2 : exec_pipe_command(1)
	note left: 再起呼び出しによりcmd1以降を実行
	activate Parent2
	Parent2->] : "grep test"
	Child1<--Parent2
	deactivate Parent2
	Parent1<--Child1 : exit()
	deactivate Child1
	destroy Child1
	activate Parent1
	Parent1->Child2 : waitpid(2)
	activate Child2
	deactivate Parent1
	Child2->Child2 : output fd setting
	note left: 標準出力をcmd1に渡す設定
	Child2->Child2 : exec_command(0)
	activate Child2
	Child2->] : "ls"
	deactivate Child2
	note left: cmd0を実行
	Parent1<--Child2 : exit()
	deactivate Child2
	destroy Child2
	activate Parent1
	[<--Parent1 : return
	deactivate Parent1
end


@enduml